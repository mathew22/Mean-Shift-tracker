# Write The Main Code Name Here Without Any Extensions

include customMake

# Spcify Compiler
ifeq ($(OPTION), 1)
#CC = g++ -O3 -funroll-all-loops
CC = g++ -g #-Wall
else
ifeq ($(OPTION), 2)
CC = /opt/intel/cc/9.1.042/bin/icpc -O3 -static -ipo -axN -prefetch -unroll -prof_use
else
CC = /opt/intel_cc_80/bin/icpc -fast -tpp2 -unroll -IPF_fma -prof_use
endif
endif
CFLAGS = -g -Wall


# make directory if it doesn't  exist
ifeq ($(MAKECMDGOALS), directory)  
	mkdir -p  bin	#-p option disables the warnings(if the folder is already present it won't give any warnings
	mkdir -p  build
endif
# Write The Input Path for Header Files and Objects
INPUT_PATH = include/
OBJECT_PATH = build/
SOURCE_PATH = src/
EXECUTABLE_PATH= bin/
OPENCV_PATH = /usr/local/#Actually this is the default path. no need to specify it specifically
GSL_PATH = /usr/local/include/gsl #Again in the default location so no need to specify the path during linking process
# Specify Headers : The ".h" Files for your Library 
HEADERS = MeanShiftTracker.h elps.h weightedhistogram.h 	
		 
# Specify Objects : The ".o" Files Generated by Compiling the ".cpp" Files
OBJECTS = MeanShiftTracker.o elps.o  weightedhistogram.o 


all : 

#compiling main code
ifeq ($(MAKECMDGOALS), mainCode)
$(MAKECMDGOALS) : $(MAKECMDGOALS).o $(OBJECTS) $(OBJECTS:%.h=$(HEADERS)%.h)
	$(CC) $(CFLAGS) -o $(EXECUTABLE_PATH)$(MAKECMDGOALS) $(OBJECT_PATH)$(MAKECMDGOALS).o $(OBJECTS:%.o=$(OBJECT_PATH)%.o) -L $(OPENCV_PATH)lib -lopencv_core -lopencv_highgui -lgsl -lgslcblas

$(MAKECMDGOALS).o : $(patsubst %.o,%.cpp,$@) 
	$(CC) $(CFLAGS) -c $(SOURCE_PATH)mainCode.cpp -o $(OBJECT_PATH)$(MAKECMDGOALS).o -I $(INPUT_PATH) -I$(OPENCV_PATH)
endif


# Compile and create object file corresponding to dependant files
%.o: $(patsubst %.o,%.cpp,$@) 
	$(CC) $(CFLAGS) -c $(SOURCE_PATH)$(patsubst %.o,%.cpp, $@) -o $(OBJECT_PATH)$@  -I $(INPUT_PATH)





.PHONY : clean
clean :
	rm -f $(OBJECT_PATH)*.o
	rm -f $(EXECUTABLE_PATH)*.exe
	echo Clean done
